{"ast":null,"code":"/* eslint-disable */\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nconst state = () => ({\n  userAccessKey: null,\n  cartProductsData: [],\n  cartProducts: [],\n  productAddSending: false,\n  cartAddingFailed: false,\n  productAdded: false,\n  open: false,\n  cartErrors: false,\n  cartError: {},\n  cartErrorMessage: ''\n});\nconst getters = {\n  cartDetailproducts(state) {\n    return state.cartProducts.map(item => item.item);\n  },\n  cartTotalPrice(state, getters) {\n    return getters.cartDetailproducts.reduce((acc, item) => item.product.price * item.quantity + acc, 0);\n  },\n  cartTotalQuantity(state, getters) {\n    return getters.cartDetailproducts.reduce((acc, item) => item.quantity + acc, 0);\n  }\n};\nconst actions = {\n  loadCart(context) {\n    return axios.get(`${API_BASE_URL}/api/baskets`, {\n      params: {\n        userAccessKey: context.state.userAccessKey\n      }\n    }).then(response => {\n      if (!context.state.userAccessKey) {\n        localStorage.setItem('userAccessKey', response.data.user.accessKey);\n        context.commit('updateUserAccessKey', response.data.user.accessKey);\n      }\n      context.commit('updateCartProductsData', response.data.items);\n      context.commit('syncCartProducts');\n    });\n  },\n  addProductToCart(context, {\n    productId,\n    colorId,\n    sizeId,\n    quantity\n  }) {\n    context.commit('updateCartAddingFailed', false);\n    context.commit('updateProductAdded', false);\n    context.commit('updateProductAddSending', true);\n    return axios.post(`${API_BASE_URL}/api/baskets/products`, {\n      productId,\n      colorId: colorId.id,\n      sizeId,\n      quantity\n    }, {\n      params: {\n        userAccessKey: context.state.userAccessKey\n      }\n    }).then(response => {\n      context.commit('updateCartProductsData', response.data.items);\n      context.commit('syncCartProducts');\n      context.commit('updateProductAdded', true);\n      context.commit('updateProductAddSending', false);\n      context.commit('updateOpen', true);\n    }).catch(error => {\n      context.commit('updateProductAddSending', false);\n      context.commit('updateCartAddingFailed', true);\n      context.commit('updateOpen', true);\n      context.commit('updateCartError', error.response.data.error);\n      if (error.response.status === 500) {\n        context.commit('updateCartErrorMessage', error.response.data.error.message);\n      }\n      if (error.response.status === 400) {\n        context.commit('updateCartErrorMessage', error.response.data.error.request.sizeId);\n      }\n    });\n  },\n  updateCartProductQuantity(context, {\n    basketItemId,\n    quantity\n  }) {\n    context.commit('updateCartErrors', false);\n    context.commit('updateCartProductQuantity', {\n      basketItemId,\n      quantity\n    });\n    if (quantity < 1) {\n      return 1;\n    }\n    return axios.put(`${API_BASE_URL}/api/baskets/products`, {\n      basketItemId,\n      quantity\n    }, {\n      params: {\n        userAccessKey: context.state.userAccessKey\n      }\n    }).then(response => {\n      context.commit('updateCartProductsData', response.data.items);\n      context.commit('syncCartProducts');\n    }).catch(error => {\n      context.commit('updateCartErrors', true);\n      context.commit('updateCartError', error.response.data.error);\n      if (error.response.status === 500) {\n        context.commit('updateCartErrorMessage', error.response.data.error.message);\n      }\n      context.commit('updateOpen', true);\n    });\n  },\n  deleteCartProduct(context, {\n    basketItemId\n  }) {\n    return axios.delete(`${API_BASE_URL}/api/baskets/products`, {\n      data: {\n        basketItemId\n      },\n      params: {\n        userAccessKey: context.state.userAccessKey\n      }\n    }).then(response => {\n      context.commit('updateCartProductsData', response.data.items);\n      context.commit('syncCartProducts');\n    });\n  },\n  openModal(context) {\n    context.commit('updateOpen', true);\n  },\n  closeModal(context) {\n    context.commit('updateOpen', false);\n    context.commit('updateProductAdded', false);\n    context.commit('updateProductAddSending', false);\n  }\n};\nconst mutations = {\n  updateUserAccessKey(state, accessKey) {\n    state.userAccessKey = accessKey;\n  },\n  updateCartProductsData(state, items) {\n    state.cartProductsData = items;\n  },\n  updateCartProductQuantity(state, {\n    basketItemId,\n    quantity\n  }) {\n    const item = state.cartProducts.find(item => item.basketItemId === basketItemId);\n    if (item) {\n      item.quantity = quantity;\n    }\n  },\n  syncCartProducts(state) {\n    state.cartProducts = state.cartProductsData.map(item => ({\n      item: {\n        basketItemId: item.id,\n        product: item.product,\n        quantity: item.quantity,\n        color: item.color,\n        size: item.size\n      }\n    }));\n  },\n  resetCart(state) {\n    state.cartProducts = [];\n    state.cartProductsData = [];\n  },\n  updateProductAddSending(state, productAddSending) {\n    state.productAddSending = productAddSending;\n  },\n  updateCartAddingFailed(state, cartAddingFailed) {\n    state.cartAddingFailed = cartAddingFailed;\n  },\n  updateProductAdded(state, productAdded) {\n    state.productAdded = productAdded;\n  },\n  updateOpen(state, open) {\n    state.open = open;\n  },\n  updateCartErrors(state, cartErrors) {\n    state.cartErrors = cartErrors;\n  },\n  updateCartError(state, cartError) {\n    state.cartError = cartError;\n  },\n  updateCartErrorMessage(state, cartErrorMessage) {\n    state.cartErrorMessage = cartErrorMessage;\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","API_BASE_URL","state","userAccessKey","cartProductsData","cartProducts","productAddSending","cartAddingFailed","productAdded","open","cartErrors","cartError","cartErrorMessage","getters","cartDetailproducts","map","item","cartTotalPrice","reduce","acc","product","price","quantity","cartTotalQuantity","actions","loadCart","context","get","params","then","response","localStorage","setItem","data","user","accessKey","commit","items","addProductToCart","productId","colorId","sizeId","post","id","catch","error","status","message","request","updateCartProductQuantity","basketItemId","put","deleteCartProduct","delete","openModal","closeModal","mutations","updateUserAccessKey","updateCartProductsData","find","syncCartProducts","color","size","resetCart","updateProductAddSending","updateCartAddingFailed","updateProductAdded","updateOpen","updateCartErrors","updateCartError","updateCartErrorMessage","namespaced"],"sources":["/Users/elenasoshina/Desktop/Skillbox_Moire_shop/Skillbox_Moire/src/store/modules/cart.js"],"sourcesContent":["/* eslint-disable */\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\n\nconst state = () => ({\n  userAccessKey: null,\n\n  cartProductsData: [],\n  cartProducts: [],\n\n  productAddSending: false,\n  cartAddingFailed: false,\n  productAdded: false,\n\n  open: false,\n  cartErrors: false,\n  cartError: {},\n  cartErrorMessage: '',\n});\n\nconst getters = {\n  cartDetailproducts(state) {\n    return state.cartProducts.map((item) => item.item);\n  },\n  cartTotalPrice(state, getters) {\n    return getters.cartDetailproducts.reduce(\n      (acc, item) => item.product.price * item.quantity + acc,\n      0,\n    );\n  },\n  cartTotalQuantity(state, getters) {\n    return getters.cartDetailproducts.reduce((acc, item) => item.quantity + acc, 0);\n  },\n};\n\nconst actions = {\n  loadCart(context) {\n    return axios\n      .get(`${API_BASE_URL}/api/baskets`, {\n        params: {\n          userAccessKey: context.state.userAccessKey,\n        },\n      })\n      .then((response) => {\n        if (!context.state.userAccessKey) {\n          localStorage.setItem('userAccessKey', response.data.user.accessKey);\n          context.commit('updateUserAccessKey', response.data.user.accessKey);\n        }\n\n        context.commit('updateCartProductsData', response.data.items);\n        context.commit('syncCartProducts');\n      });\n  },\n  addProductToCart(context, {\n    productId, colorId, sizeId, quantity,\n  }) {\n    context.commit('updateCartAddingFailed', false);\n    context.commit('updateProductAdded', false);\n    context.commit('updateProductAddSending', true);\n    return axios\n      .post(`${API_BASE_URL}/api/baskets/products`,\n        {\n          productId,\n          colorId: colorId.id,\n          sizeId,\n          quantity,\n        },\n        {\n          params: {\n            userAccessKey: context.state.userAccessKey,\n          },\n        })\n      .then((response) => {\n        context.commit('updateCartProductsData', response.data.items);\n        context.commit('syncCartProducts');\n        context.commit('updateProductAdded', true);\n        context.commit('updateProductAddSending', false);\n        context.commit('updateOpen', true);\n      })\n      .catch((error) => {\n        context.commit('updateProductAddSending', false);\n        context.commit('updateCartAddingFailed', true);\n        context.commit('updateOpen', true);\n        context.commit('updateCartError', error.response.data.error);\n        if (error.response.status === 500) {\n          context.commit('updateCartErrorMessage', error.response.data.error.message);\n        }\n        if (error.response.status === 400) {\n          context.commit('updateCartErrorMessage', error.response.data.error.request.sizeId);\n        }\n      });\n  },\n  updateCartProductQuantity(context, { basketItemId, quantity }) {\n    context.commit('updateCartErrors', false);\n    context.commit('updateCartProductQuantity', { basketItemId, quantity });\n\n    if (quantity < 1) {\n      return 1;\n    }\n\n    return axios\n      .put(`${API_BASE_URL}/api/baskets/products`,\n        {\n          basketItemId,\n          quantity,\n        },\n        {\n          params: {\n            userAccessKey: context.state.userAccessKey,\n          },\n        })\n      .then((response) => {\n        context.commit('updateCartProductsData', response.data.items);\n        context.commit('syncCartProducts');\n      })\n      .catch((error) => {\n        context.commit('updateCartErrors', true);\n        context.commit('updateCartError', error.response.data.error);\n        if (error.response.status === 500) {\n          context.commit('updateCartErrorMessage', error.response.data.error.message);\n        }\n        context.commit('updateOpen', true);\n      });\n  },\n  deleteCartProduct(context, { basketItemId }) {\n    return axios\n      .delete(`${API_BASE_URL}/api/baskets/products`, {\n        data: {\n          basketItemId,\n        },\n        params: {\n          userAccessKey: context.state.userAccessKey,\n        },\n      })\n      .then((response) => {\n        context.commit('updateCartProductsData', response.data.items);\n        context.commit('syncCartProducts');\n      });\n  },\n  openModal(context) {\n    context.commit('updateOpen', true);\n  },\n  closeModal(context) {\n    context.commit('updateOpen', false);\n    context.commit('updateProductAdded', false);\n    context.commit('updateProductAddSending', false);\n  },\n};\n\nconst mutations = {\n  updateUserAccessKey(state, accessKey) {\n    state.userAccessKey = accessKey;\n  },\n  updateCartProductsData(state, items) {\n    state.cartProductsData = items;\n  },\n  updateCartProductQuantity(state, { basketItemId, quantity }) {\n    const item = state.cartProducts.find((item) => item.basketItemId === basketItemId);\n\n    if (item) {\n      item.quantity = quantity;\n    }\n  },\n  syncCartProducts(state) {\n    state.cartProducts = state.cartProductsData.map((item) => ({\n      item: {\n        basketItemId: item.id,\n        product: item.product,\n        quantity: item.quantity,\n        color: item.color,\n        size: item.size,\n      },\n    }));\n  },\n  resetCart(state) {\n    state.cartProducts = [];\n    state.cartProductsData = [];\n  },\n  updateProductAddSending(state, productAddSending) {\n    state.productAddSending = productAddSending;\n  },\n  updateCartAddingFailed(state, cartAddingFailed) {\n    state.cartAddingFailed = cartAddingFailed;\n  },\n  updateProductAdded(state, productAdded) {\n    state.productAdded = productAdded;\n  },\n  updateOpen(state, open) {\n    state.open = open;\n  },\n  updateCartErrors(state, cartErrors) {\n    state.cartErrors = cartErrors;\n  },\n  updateCartError(state, cartError) {\n    state.cartError = cartError;\n  },\n  updateCartErrorMessage(state, cartErrorMessage) {\n    state.cartErrorMessage = cartErrorMessage;\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}