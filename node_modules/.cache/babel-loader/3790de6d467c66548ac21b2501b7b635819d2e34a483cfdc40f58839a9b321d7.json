{"ast":null,"code":"/* eslint-disable */\nimport ProductColorFilter from './ProductColorFilter.vue';\nimport ProductCheckboxFilter from './ProductCheckboxFilter.vue';\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  components: {\n    ProductColorFilter,\n    ProductCheckboxFilter\n  },\n  props: ['priceFrom', 'priceTo', 'categoryId', 'colorIds', 'materialIds', 'seasonIds'],\n  data() {\n    return {\n      currentPriceFrom: 0,\n      currentPriceTo: 0,\n      currentCategoryId: 0,\n      selectColorIds: [],\n      selectMaterialIds: [],\n      selectSeasonIds: [],\n      focused: false,\n      submitDisabled: true\n    };\n  },\n  computed: {\n    ...mapState('products', ['categories', 'colors', 'materials', 'seasons']),\n    filters() {\n      return {\n        currentPriceFrom: this.currentPriceFrom,\n        currentPriceTo: this.currentPriceTo,\n        currentCategoryId: this.currentCategoryId,\n        selectColorIds: this.selectColorIds,\n        selectMaterialIds: this.selectMaterialIds,\n        selectSeasonIds: this.selectSeasonIds\n      };\n    },\n    showResetBtn() {\n      const initial = {\n        currentPriceFrom: 0,\n        currentPriceTo: 0,\n        currentCategoryId: 0,\n        selectColorIds: [],\n        selectMaterialIds: [],\n        selectSeasonIds: []\n      };\n      return JSON.stringify(initial) !== JSON.stringify(this.filters);\n    }\n  },\n  watch: {\n    priceFrom(value) {\n      this.currentPriceFrom = value;\n    },\n    priceTo(value) {\n      this.currentPriceTo = value;\n    },\n    categoryId(value) {\n      this.currentCategoryId = value;\n    },\n    colorIds(value) {\n      this.selectColorIds = value;\n    },\n    materialIds(value) {\n      this.selectMaterialIds = value;\n    },\n    seasonIds(value) {\n      this.selectSeasonIds = value;\n    }\n  },\n  created() {\n    this.loadCategories();\n    this.loadColors();\n    this.loadMaterials();\n    this.loadSeasons();\n  },\n  methods: {\n    ...mapActions('products', ['loadCategories', 'loadColors', 'loadMaterials', 'loadSeasons']),\n    submit() {\n      if (this.currentPriceFrom !== null) {\n        this.$emit('update:priceFrom', this.currentPriceFrom);\n      }\n      if (this.currentPriceTo !== null) {\n        this.$emit('update:priceTo', this.currentPriceTo);\n      }\n      if (this.currentCategoryId !== null) {\n        this.$emit('update:categoryId', this.currentCategoryId);\n      }\n      this.$emit('update:colorIds', this.selectColorIds);\n      this.$emit('update:materialIds', this.selectMaterialIds);\n      this.$emit('update:seasonIds', this.selectSeasonIds);\n    },\n    reset() {\n      if (this.currentPriceFrom !== 0) {\n        this.$emit('update:priceFrom', this.currentPriceFrom = 0);\n      }\n      if (this.currentPriceTo !== 0) {\n        this.$emit('update:priceTo', this.currentPriceTo = 0);\n      }\n      if (this.currentCategoryId !== 0) {\n        this.$emit('update:categoryId', this.currentCategoryId = 0);\n      }\n      if (this.selectColorIds.length > 0) {\n        this.$emit('update:colorIds', this.selectColorIds = []);\n      }\n      if (this.selectMaterialIds.length > 0) {\n        this.$emit('update:materialIds', this.selectMaterialIds = []);\n      }\n      if (this.selectSeasonIds.length > 0) {\n        this.$emit('update:seasonIds', this.selectSeasonIds = []);\n      }\n    },\n    focusPriceFrom() {\n      this.focused = true;\n      if (this.currentPriceFrom === 0) this.currentPriceFrom = '';\n    },\n    blurPriceFrom() {\n      this.focused = false;\n      if (this.currentPriceFrom === '') this.currentPriceFrom = 0;\n    },\n    focusPriceTo() {\n      this.focused = true;\n      if (this.currentPriceTo === 0) this.currentPriceTo = '';\n    },\n    blurPriceTo() {\n      this.focused = false;\n      if (this.currentPriceTo === '') this.currentPriceTo = 0;\n    }\n  }\n};","map":{"version":3,"names":["ProductColorFilter","ProductCheckboxFilter","mapState","mapActions","components","props","data","currentPriceFrom","currentPriceTo","currentCategoryId","selectColorIds","selectMaterialIds","selectSeasonIds","focused","submitDisabled","computed","filters","showResetBtn","initial","JSON","stringify","watch","priceFrom","value","priceTo","categoryId","colorIds","materialIds","seasonIds","created","loadCategories","loadColors","loadMaterials","loadSeasons","methods","submit","$emit","reset","length","focusPriceFrom","blurPriceFrom","focusPriceTo","blurPriceTo"],"sources":["src/components/Product/ProductFilter.vue"],"sourcesContent":["<template>\n  <!-- eslint-disable  -->\n  <aside class=\"filter\">\n    <!-- Фильтрация по цене -->\n    <form class=\"filter__form form\" action=\"#\" method=\"get\" @submit.prevent=\"submit\">\n      <fieldset class=\"form__block\">\n        <legend class=\"form__legend\">Цена</legend>\n        <label class=\"form__label form__label--price\">\n          <input class=\"form__input\" type=\"number\" name=\"min-price\" v-model.number=\"currentPriceFrom\"\n            @focus=\"focusPriceFrom\" @blur=\"blurPriceFrom\">\n          <span class=\"form__value\">От</span>\n        </label>\n        <label class=\"form__label form__label--price\">\n          <input class=\"form__input\" type=\"number\" name=\"max-price\" v-model.number=\"currentPriceTo\" @focus=\"focusPriceTo\"\n            @blur=\"blurPriceTo\">\n          <span class=\"form__value\">До</span>\n        </label>\n      </fieldset>\n      <!-- Фильтрация по категориям -->\n      <fieldset class=\"form__block\">\n        <legend class=\"form__legend\">Категория</legend>\n        <label class=\"form__label form__label--select\">\n          <select class=\"form__select\" type=\"text\" name=\"category\" v-model.number=\"currentCategoryId\">\n            <option value=\"0\">Все категории</option>\n            <option :value=\"category.id\" v-for=\"category in categories\" :key=\"category.id\">{{ category.title }}</option>\n          </select>\n        </label>\n      </fieldset>\n      <!-- Фильтрация по цвету -->\n      <fieldset class=\"form__block\">\n        <legend class=\"form__legend\">Цвет</legend>\n        <ProductColorFilter :colors=\"colors\" :select-color-ids.sync=\"selectColorIds\" />\n      </fieldset>\n      <!-- Фильтрация по материалу -->\n      <fieldset class=\"form__block\">\n        <legend class=\"form__legend\">Материал</legend>\n        <ProductCheckboxFilter :items=\"materials\" :select-ids.sync=\"selectMaterialIds\" />\n      </fieldset>\n      <!-- Фильтрация по коллекции -->\n      <fieldset class=\"form__block\">\n        <legend class=\"form__legend\">Коллекция</legend>\n        <ProductCheckboxFilter :items=\"seasons\" :select-ids.sync=\"selectSeasonIds\" />\n      </fieldset>\n      <!-- Кнопки фильтрации -->\n      <button class=\"filter__submit button button--primery\" type=\"submit\" :blocked=\"submitDisabled\">\n        Применить\n      </button>\n      <button class=\"filter__reset button button--second\" type=\"button\" @click.prevent=\"reset\" v-if=\"showResetBtn\">\n        Сбросить\n      </button>\n    </form>\n  </aside>\n</template>\n\n<script>\n/* eslint-disable */\nimport ProductColorFilter from './ProductColorFilter.vue';\nimport ProductCheckboxFilter from './ProductCheckboxFilter.vue';\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  components: { ProductColorFilter, ProductCheckboxFilter },\n  props: ['priceFrom', 'priceTo', 'categoryId', 'colorIds', 'materialIds', 'seasonIds'],\n  data() {\n    return {\n      currentPriceFrom: 0,\n      currentPriceTo: 0,\n      currentCategoryId: 0,\n      selectColorIds: [],\n      selectMaterialIds: [],\n      selectSeasonIds: [],\n      focused: false,\n      submitDisabled: true,\n    };\n  },\n  computed: {\n    ...mapState('products', [\n      'categories',\n      'colors',\n      'materials',\n      'seasons',\n    ]),\n    filters() {\n      return {\n        currentPriceFrom: this.currentPriceFrom,\n        currentPriceTo: this.currentPriceTo,\n        currentCategoryId: this.currentCategoryId,\n        selectColorIds: this.selectColorIds,\n        selectMaterialIds: this.selectMaterialIds,\n        selectSeasonIds: this.selectSeasonIds,\n      };\n    },\n    showResetBtn() {\n      const initial = {\n        currentPriceFrom: 0,\n        currentPriceTo: 0,\n        currentCategoryId: 0,\n        selectColorIds: [],\n        selectMaterialIds: [],\n        selectSeasonIds: [],\n      };\n      return JSON.stringify(initial) !== JSON.stringify(this.filters);\n    },\n  },\n  watch: {\n    priceFrom(value) {\n      this.currentPriceFrom = value;\n    },\n    priceTo(value) {\n      this.currentPriceTo = value;\n    },\n    categoryId(value) {\n      this.currentCategoryId = value;\n    },\n    colorIds(value) {\n      this.selectColorIds = value;\n    },\n    materialIds(value) {\n      this.selectMaterialIds = value;\n    },\n    seasonIds(value) {\n      this.selectSeasonIds = value;\n    },\n  },\n  created() {\n    this.loadCategories();\n    this.loadColors();\n    this.loadMaterials();\n    this.loadSeasons();\n  },\n  methods: {\n    ...mapActions('products', [\n      'loadCategories',\n      'loadColors',\n      'loadMaterials',\n      'loadSeasons',\n    ]),\n    submit() {\n      if (this.currentPriceFrom !== null) {\n        this.$emit('update:priceFrom', this.currentPriceFrom);\n      }\n      if (this.currentPriceTo !== null) {\n        this.$emit('update:priceTo', this.currentPriceTo);\n      }\n      if (this.currentCategoryId !== null) {\n        this.$emit('update:categoryId', this.currentCategoryId);\n      }\n      this.$emit('update:colorIds', this.selectColorIds);\n      this.$emit('update:materialIds', this.selectMaterialIds);\n      this.$emit('update:seasonIds', this.selectSeasonIds);\n    },\n    reset() {\n      if (this.currentPriceFrom !== 0) {\n        this.$emit('update:priceFrom', (this.currentPriceFrom = 0));\n      }\n      if (this.currentPriceTo !== 0) {\n        this.$emit('update:priceTo', (this.currentPriceTo = 0));\n      }\n      if (this.currentCategoryId !== 0) {\n        this.$emit('update:categoryId', (this.currentCategoryId = 0));\n      }\n      if (this.selectColorIds.length > 0) {\n        this.$emit('update:colorIds', (this.selectColorIds = []));\n      }\n      if (this.selectMaterialIds.length > 0) {\n        this.$emit('update:materialIds', (this.selectMaterialIds = []));\n      }\n      if (this.selectSeasonIds.length > 0) {\n        this.$emit('update:seasonIds', (this.selectSeasonIds = []));\n      }\n    },\n    focusPriceFrom() {\n      this.focused = true;\n      if (this.currentPriceFrom === 0) this.currentPriceFrom = '';\n    },\n    blurPriceFrom() {\n      this.focused = false;\n      if (this.currentPriceFrom === '') this.currentPriceFrom = 0;\n    },\n    focusPriceTo() {\n      this.focused = true;\n      if (this.currentPriceTo === 0) this.currentPriceTo = '';\n    },\n    blurPriceTo() {\n      this.focused = false;\n      if (this.currentPriceTo === '') this.currentPriceTo = 0;\n    },\n  },\n};\n</script>\n"],"mappings":"AAuDA;AACA,OAAAA,kBAAA;AACA,OAAAC,qBAAA;AACA,SAAAC,QAAA,EAAAC,UAAA;AAEA;EACAC,UAAA;IAAAJ,kBAAA;IAAAC;EAAA;EACAI,KAAA;EACAC,KAAA;IACA;MACAC,gBAAA;MACAC,cAAA;MACAC,iBAAA;MACAC,cAAA;MACAC,iBAAA;MACAC,eAAA;MACAC,OAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAb,QAAA,cACA,cACA,UACA,aACA,UACA;IACAc,QAAA;MACA;QACAT,gBAAA,OAAAA,gBAAA;QACAC,cAAA,OAAAA,cAAA;QACAC,iBAAA,OAAAA,iBAAA;QACAC,cAAA,OAAAA,cAAA;QACAC,iBAAA,OAAAA,iBAAA;QACAC,eAAA,OAAAA;MACA;IACA;IACAK,aAAA;MACA,MAAAC,OAAA;QACAX,gBAAA;QACAC,cAAA;QACAC,iBAAA;QACAC,cAAA;QACAC,iBAAA;QACAC,eAAA;MACA;MACA,OAAAO,IAAA,CAAAC,SAAA,CAAAF,OAAA,MAAAC,IAAA,CAAAC,SAAA,MAAAJ,OAAA;IACA;EACA;EACAK,KAAA;IACAC,UAAAC,KAAA;MACA,KAAAhB,gBAAA,GAAAgB,KAAA;IACA;IACAC,QAAAD,KAAA;MACA,KAAAf,cAAA,GAAAe,KAAA;IACA;IACAE,WAAAF,KAAA;MACA,KAAAd,iBAAA,GAAAc,KAAA;IACA;IACAG,SAAAH,KAAA;MACA,KAAAb,cAAA,GAAAa,KAAA;IACA;IACAI,YAAAJ,KAAA;MACA,KAAAZ,iBAAA,GAAAY,KAAA;IACA;IACAK,UAAAL,KAAA;MACA,KAAAX,eAAA,GAAAW,KAAA;IACA;EACA;EACAM,QAAA;IACA,KAAAC,cAAA;IACA,KAAAC,UAAA;IACA,KAAAC,aAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA,GAAA/B,UAAA,cACA,kBACA,cACA,iBACA,cACA;IACAgC,OAAA;MACA,SAAA5B,gBAAA;QACA,KAAA6B,KAAA,0BAAA7B,gBAAA;MACA;MACA,SAAAC,cAAA;QACA,KAAA4B,KAAA,wBAAA5B,cAAA;MACA;MACA,SAAAC,iBAAA;QACA,KAAA2B,KAAA,2BAAA3B,iBAAA;MACA;MACA,KAAA2B,KAAA,yBAAA1B,cAAA;MACA,KAAA0B,KAAA,4BAAAzB,iBAAA;MACA,KAAAyB,KAAA,0BAAAxB,eAAA;IACA;IACAyB,MAAA;MACA,SAAA9B,gBAAA;QACA,KAAA6B,KAAA,0BAAA7B,gBAAA;MACA;MACA,SAAAC,cAAA;QACA,KAAA4B,KAAA,wBAAA5B,cAAA;MACA;MACA,SAAAC,iBAAA;QACA,KAAA2B,KAAA,2BAAA3B,iBAAA;MACA;MACA,SAAAC,cAAA,CAAA4B,MAAA;QACA,KAAAF,KAAA,yBAAA1B,cAAA;MACA;MACA,SAAAC,iBAAA,CAAA2B,MAAA;QACA,KAAAF,KAAA,4BAAAzB,iBAAA;MACA;MACA,SAAAC,eAAA,CAAA0B,MAAA;QACA,KAAAF,KAAA,0BAAAxB,eAAA;MACA;IACA;IACA2B,eAAA;MACA,KAAA1B,OAAA;MACA,SAAAN,gBAAA,aAAAA,gBAAA;IACA;IACAiC,cAAA;MACA,KAAA3B,OAAA;MACA,SAAAN,gBAAA,cAAAA,gBAAA;IACA;IACAkC,aAAA;MACA,KAAA5B,OAAA;MACA,SAAAL,cAAA,aAAAA,cAAA;IACA;IACAkC,YAAA;MACA,KAAA7B,OAAA;MACA,SAAAL,cAAA,cAAAA,cAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}