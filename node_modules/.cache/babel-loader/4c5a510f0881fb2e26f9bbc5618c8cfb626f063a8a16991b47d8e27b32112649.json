{"ast":null,"code":"import BaseLayout from '@/layouts/BaseLayout.vue';\nimport OrderItem from '@/components/Order/OrderItem.vue';\nimport numberFormat from '@/helpers/numberFormat';\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  components: {\n    BaseLayout,\n    OrderItem\n  },\n  filters: {\n    numberFormat\n  },\n  computed: {\n    ...mapState('order', ['orderInfo', 'open', 'orderError', 'orderErrorMessage']),\n    totalOrderPrice() {\n      return Number(this.orderInfo.totalPrice);\n    }\n  },\n  watch: {\n    '$route.params.id': {\n      handler() {\n        this.loadOrder();\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    ...mapActions('order', ['loadOrderInfo', 'closeModal']),\n    loadOrder() {\n      this.loadOrderInfo({\n        userAccessKey: this.$store.state.userAccessKey,\n        id: this.$route.params.id\n      }).catch(() => {\n        this.$router.replace('/notFound');\n      });\n    }\n  }\n};","map":{"version":3,"names":["BaseLayout","OrderItem","numberFormat","mapState","mapActions","components","filters","computed","totalOrderPrice","Number","orderInfo","totalPrice","watch","handler","loadOrder","immediate","methods","loadOrderInfo","userAccessKey","$store","state","id","$route","params","catch","$router","replace"],"sources":["src/pages/OrderInfoPage.vue"],"sourcesContent":["<template>\n  <BaseLayout>\n    <main class=\"content container\">\n      <div class=\"content__top\">\n        <ul class=\"breadcrumbs\">\n          <li class=\"breadcrumbs__item\">\n            <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'main' }\">\n              Каталог\n            </router-link>\n          </li>\n          <li class=\"breadcrumbs__item\">\n            <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'cart' }\">\n              Корзина\n            </router-link>\n          </li>\n          <li class=\"breadcrumbs__item\">\n            <a class=\"breadcrumbs__link\">\n              Оформление заказа\n            </a>\n          </li>\n        </ul>\n\n        <h1 class=\"content__title\" v-if=\"orderInfo\">\n          Заказ оформлен <span>№{{ this.$route.params.id }}</span>\n        </h1>\n      </div>\n\n      <section class=\"cart\">\n        <form class=\"cart__form form\" action=\"#\" method=\"POST\">\n          <div class=\"cart__field\">\n            <p class=\"cart__message\">\n              Благодарим за&nbsp;выбор нашего магазина. На&nbsp;Вашу почту придет письмо\n              с&nbsp;деталями заказа. Наши менеджеры свяжутся с&nbsp;Вами в&nbsp;течение часа для\n              уточнения деталей доставки.\n            </p>\n\n            <ul class=\"dictionary\" v-if=\"orderInfo\">\n              <li class=\"dictionary__item\">\n                <span class=\"dictionary__key\">\n                  Статус заказа\n                </span>\n                <span class=\"dictionary__value\">\n                  {{ orderInfo.status.title }}\n                </span>\n              </li>\n              <li class=\"dictionary__item\">\n                <span class=\"dictionary__key\">\n                  Получатель\n                </span>\n                <span class=\"dictionary__value\">\n                  {{ orderInfo.name }}\n                </span>\n              </li>\n              <li class=\"dictionary__item\">\n                <span class=\"dictionary__key\">\n                  Адрес доставки\n                </span>\n                <span class=\"dictionary__value\">\n                  {{ orderInfo.address }}\n                </span>\n              </li>\n              <li class=\"dictionary__item\">\n                <span class=\"dictionary__key\">\n                  Телефон\n                </span>\n                <span class=\"dictionary__value\">\n                  {{ orderInfo.phone }}\n                </span>\n              </li>\n              <li class=\"dictionary__item\">\n                <span class=\"dictionary__key\">\n                  Email\n                </span>\n                <span class=\"dictionary__value\">\n                  {{ orderInfo.email }}\n                </span>\n              </li>\n              <li class=\"dictionary__item\">\n                <span class=\"dictionary__key\">\n                  Способ оплаты\n                </span>\n                <span class=\"dictionary__value\">\n                  {{ orderInfo.paymentType }}\n                </span>\n              </li>\n              <li class=\"dictionary__item\">\n                <span class=\"dictionary__key\">\n                  Комментарий\n                </span>\n                <span class=\"dictionary__value\">\n                  {{ orderInfo.comment }}\n                </span>\n              </li>\n            </ul>\n          </div>\n\n          <div class=\"cart__block\">\n            <ul class=\"cart__orders\" v-if=\"orderInfo\">\n              <OrderItem v-for=\"item in orderInfo.basket.items\" :key=\"item.id\" :item=\"item\" />\n            </ul>\n\n            <div class=\"cart__total\" v-if=\"orderInfo\">\n              <p>\n                Доставка: <b>{{ this.orderInfo.deliveryType.price }} ₽</b>\n              </p>\n              <p>\n                Итого товаров: <b>{{ this.orderInfo.basket.items.length }}</b> на сумму\n                <b>{{ totalOrderPrice | numberFormat }} ₽</b>\n              </p>\n            </div>\n          </div>\n          <vue-modaltor :visible=\"open\" @hide=\"closeModal\" :show-close-button=\"false\">\n            <div class=\"cart__error form__error-block\" style=\"text-align:center;\">\n              <h4>Ошибка!</h4>\n              <p>\n                {{ orderErrorMessage }}\n              </p>\n            </div>\n          </vue-modaltor>\n        </form>\n      </section>\n    </main>\n  </BaseLayout>\n</template>\n\n<script>\nimport BaseLayout from '@/layouts/BaseLayout.vue';\nimport OrderItem from '@/components/Order/OrderItem.vue';\nimport numberFormat from '@/helpers/numberFormat';\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  components: { BaseLayout, OrderItem },\n  filters: { numberFormat },\n  computed: {\n    ...mapState('order', [\n      'orderInfo',\n      'open',\n      'orderError',\n      'orderErrorMessage',\n    ]),\n    totalOrderPrice() {\n      return (Number(this.orderInfo.totalPrice));\n    },\n  },\n  watch: {\n    '$route.params.id': {\n      handler() {\n        this.loadOrder();\n      },\n      immediate: true,\n    },\n  },\n  methods: {\n    ...mapActions('order', [\n      'loadOrderInfo',\n      'closeModal',\n    ]),\n    loadOrder() {\n      this.loadOrderInfo({\n        userAccessKey: this.$store.state.userAccessKey,\n        id: this.$route.params.id,\n      }).catch(() => {\n        this.$router.replace('/notFound');\n      });\n    },\n  },\n};\n</script>\n"],"mappings":"AA8HA,OAAAA,UAAA;AACA,OAAAC,SAAA;AACA,OAAAC,YAAA;AACA,SAAAC,QAAA,EAAAC,UAAA;AAEA;EACAC,UAAA;IAAAL,UAAA;IAAAC;EAAA;EACAK,OAAA;IAAAJ;EAAA;EACAK,QAAA;IACA,GAAAJ,QAAA,WACA,aACA,QACA,cACA,oBACA;IACAK,gBAAA;MACA,OAAAC,MAAA,MAAAC,SAAA,CAAAC,UAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,QAAA;QACA,KAAAC,SAAA;MACA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAZ,UAAA,WACA,iBACA,aACA;IACAU,UAAA;MACA,KAAAG,aAAA;QACAC,aAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,aAAA;QACAG,EAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF;MACA,GAAAG,KAAA;QACA,KAAAC,OAAA,CAAAC,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}